classpath = ${jpf-symbc-bounded}/build/examples
sourcepath = ${jpf-symbc-bounded}/src/examples

target = symbolicheap.bounded.AvlTree
#symbolic.method = symbolicheap.bounded.AvlTree.bfsTraverse(sym);

#----------------------------------------------------------------------
symbolic.green = false
symbolic.solver.slicing = true
symbolic.solver.canonization = true
symbolic.solver.dp = z3
symbolic.solver.mc = latte
symbolic.solver.mc.tool = /Users/jaco/Documents/workspace/jpf-probsym/lib/count.osx2
symbolic.solver.store = redis

#----------------------------------------------------------------------
symbolic.dp = z3
symbolic.lazy = true
symbolic.lazy.bounded = false
symbolic.lazy.subtypes = true
symbolic.lazy.refine = false
symbolic.lazy.bounddb = ${sourcepath}/symbolicheap/bounded/bounddb/AvlTree-05.txt
symbolic.lazy.limit = 5
symbolic.lazy.useauxsolver = false
symbolic.lazy.useauxsolver.debug = false
symbolic.lazy.pvarsdb = ${sourcepath}/symbolicheap/bounded/bounddb/AvlTree-05.pvars

#----------------------------------------------------------------------
listener = gov.nasa.jpf.symbc.heap.bounded.HeapSymbolicListenerBounded3
#listener = gov.nasa.jpf.symbc.heap.HeapSymbolicListener
#jvm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory
jvm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactoryBounded
vm.storage.class=nil
