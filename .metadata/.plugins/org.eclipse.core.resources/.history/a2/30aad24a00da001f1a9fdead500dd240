classpath = ${jpf-symbc-bounded}/build/examples
sourcepath = ${jpf-symbc-bounded}/src/examples

target = symbolicheap.bounded.BinHeap
symbolic.method = symbolicheap.bounded.BinHeap.concreteRepOK(con);
#search.depth_limit=10000

#----------------------------------------------------------------------
symbolic.green = false
symbolic.solver.slicing = true
symbolic.solver.canonization = true
symbolic.solver.dp = cvc3
symbolic.solver.mc = latte
symbolic.solver.mc.tool = /Users/jaco/Documents/workspace/jpf-probsym/lib/count.osx2
symbolic.solver.store = redis


#----------------------------------------------------------------------
#symbolic.dp = cvc3
#symbolic.dp = choco
symbolic.lazy = true
symbolic.lazy.subtypes = true
symbolic.bounded = false
symbolic.lazy.refine = false
symbolic.lazy.bounddb = ${sourcepath}/symbolicheap/bounded/bounddb/BinHeap-13.txt
symbolic.lazy.limit = 13
symbolic.lazy.useauxsolver = true
symbolic.lazy.useauxsolver.debug = false
symbolic.lazy.pvarsdb = ${sourcepath}/symbolicheap/bounded/bounddb/BinHeap-13.pvars
symbolic.lazy.satdb = false
symbolic.lazy.satdb.debug = false

#----------------------------------------------------------------------
vm.storage.class=nil
#listener = gov.nasa.jpf.symbc.heap.HeapSymbolicListener
listener = gov.nasa.jpf.symbc.heap.bounded.HeapSymbolicListenerBounded3
jvm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory
#jvm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactoryBounded
